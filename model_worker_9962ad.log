2024-05-08 20:00:06 | INFO | model_worker | args: Namespace(host='0.0.0.0', port=40000, worker_address='http://localhost:40000', controller_address='http://localhost:50010', model_name=None, sgl_endpoint='http://127.0.0.1:30000', limit_model_concurrency=5, stream_interval=1, no_register=False)
2024-05-08 20:00:18 | ERROR | stderr | Traceback (most recent call last):
2024-05-08 20:00:18 | ERROR | stderr |   File "/home/tiger/miniconda3/envs/sglang/lib/python3.10/runpy.py", line 196, in _run_module_as_main
2024-05-08 20:00:18 | ERROR | stderr |     return _run_code(code, main_globals, None,
2024-05-08 20:00:18 | ERROR | stderr |   File "/home/tiger/miniconda3/envs/sglang/lib/python3.10/runpy.py", line 86, in _run_code
2024-05-08 20:00:18 | ERROR | stderr |     exec(code, run_globals)
2024-05-08 20:00:18 | ERROR | stderr |   File "/mnt/bn/vl-research/workspace/boli01/projects/LLaVA_Next/llava/serve/sglang_worker.py", line 236, in <module>
2024-05-08 20:00:18 | ERROR | stderr |     worker = ModelWorker(args.controller_address, args.worker_address, args.sgl_endpoint, worker_id, args.no_register, args.model_name)
2024-05-08 20:00:18 | ERROR | stderr |   File "/mnt/bn/vl-research/workspace/boli01/projects/LLaVA_Next/llava/serve/sglang_worker.py", line 66, in __init__
2024-05-08 20:00:18 | ERROR | stderr |     backend = RuntimeEndpoint(sgl_endpoint)
2024-05-08 20:00:18 | ERROR | stderr |   File "/mnt/bn/vl-research/workspace/boli01/projects/demos/sglang_codebase/python/sglang/backend/runtime_endpoint.py", line 31, in __init__
2024-05-08 20:00:18 | ERROR | stderr |     res = http_request(
2024-05-08 20:00:18 | ERROR | stderr |   File "/mnt/bn/vl-research/workspace/boli01/projects/demos/sglang_codebase/python/sglang/utils.py", line 113, in http_request
2024-05-08 20:00:18 | ERROR | stderr |     resp = urllib.request.urlopen(req, data=data, cafile=verify)
2024-05-08 20:00:18 | ERROR | stderr |   File "/home/tiger/miniconda3/envs/sglang/lib/python3.10/urllib/request.py", line 216, in urlopen
2024-05-08 20:00:18 | ERROR | stderr |     return opener.open(url, data, timeout)
2024-05-08 20:00:18 | ERROR | stderr |   File "/home/tiger/miniconda3/envs/sglang/lib/python3.10/urllib/request.py", line 519, in open
2024-05-08 20:00:18 | ERROR | stderr |     response = self._open(req, data)
2024-05-08 20:00:18 | ERROR | stderr |   File "/home/tiger/miniconda3/envs/sglang/lib/python3.10/urllib/request.py", line 536, in _open
2024-05-08 20:00:18 | ERROR | stderr |     result = self._call_chain(self.handle_open, protocol, protocol +
2024-05-08 20:00:18 | ERROR | stderr |   File "/home/tiger/miniconda3/envs/sglang/lib/python3.10/urllib/request.py", line 496, in _call_chain
2024-05-08 20:00:18 | ERROR | stderr |     result = func(*args)
2024-05-08 20:00:18 | ERROR | stderr |   File "/home/tiger/miniconda3/envs/sglang/lib/python3.10/urllib/request.py", line 1377, in http_open
2024-05-08 20:00:18 | ERROR | stderr |     return self.do_open(http.client.HTTPConnection, req)
2024-05-08 20:00:18 | ERROR | stderr |   File "/home/tiger/miniconda3/envs/sglang/lib/python3.10/urllib/request.py", line 1352, in do_open
2024-05-08 20:00:18 | ERROR | stderr |     r = h.getresponse()
2024-05-08 20:00:18 | ERROR | stderr |   File "/home/tiger/miniconda3/envs/sglang/lib/python3.10/http/client.py", line 1375, in getresponse
2024-05-08 20:00:18 | ERROR | stderr |     response.begin()
2024-05-08 20:00:18 | ERROR | stderr |   File "/home/tiger/miniconda3/envs/sglang/lib/python3.10/http/client.py", line 318, in begin
2024-05-08 20:00:18 | ERROR | stderr |     version, status, reason = self._read_status()
2024-05-08 20:00:18 | ERROR | stderr |   File "/home/tiger/miniconda3/envs/sglang/lib/python3.10/http/client.py", line 279, in _read_status
2024-05-08 20:00:18 | ERROR | stderr |     line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
2024-05-08 20:00:18 | ERROR | stderr |   File "/home/tiger/miniconda3/envs/sglang/lib/python3.10/socket.py", line 705, in readinto
2024-05-08 20:00:18 | ERROR | stderr |     return self._sock.recv_into(b)
2024-05-08 20:00:18 | ERROR | stderr | KeyboardInterrupt
